import random
import os

import telebot

import answer_handler
import questions_container

# server for vercel
from fastapi import FastAPI

app = FastAPI()

@app.get("/")
async def root():
    return {"message": "Hello World!"}


token = os.environ.get('TOKEN')
bot = telebot.TeleBot(token)

usersAndSteps = {}

questions = questions_container.questions

@bot.message_handler()
def start(message):
	print("handling message with text: " + message.text)
	if message.text == '/start':
		response_options = telebot.types.InlineKeyboardMarkup(row_width=2)
		for i in questions_container.answers[0]:
			response_options.add(telebot.types.InlineKeyboardButton(i, callback_data=i))

		bot.send_message(message.chat.id,questions[0],parse_mode="html",reply_markup=response_options)
		usersAndSteps.update({message.chat.id : 0})

				# debug
	elif message.text == 'check':
		if (message.chat.id == 1016872254):
			text = ''
			for key in usersAndSteps.keys():
				text += f'{key} : {usersAndSteps[key]}\n'

			bot.send_message(message.chat.id,text)

	elif message.text == "/brawlstars":
		bot.send_message(message.chat.id,"–≤–∞—É, —Ç—ã –Ω–∞—à–µ–ª –ø–∞—Å—Ö–∞–ª–∫—É. –≤–æ–∑—å–º–∏ —Å –ø–æ–ª–∫–∏ –ø–∏—Ä–æ–∂–æ–∫ –∏ —Å–∫–∞–∂–∏ —ç—Ç–æ–º—É —á–µ–ª—É (@H0uZz (—Å–æ–∑–¥–∞—Ç–µ–ª—å —Å–∏—è —à–µ–¥–µ–≤—Ä–∞)), —á—Ç–æ –Ω–∞—à–µ–ª –ø–æ—Å—Ö–∞–ª–æ—á–∫—Éü•∞")
	elif message.text == '–ø–∞–∫–µ–∂ —Ä–µ–∑—É–ª—å—Ç–∞—Ç':
		bot.send_message(message.chat.id,f'–¢—ã –∂–¥–µ—à—å –≤–∞–ª–æ—Ä–∞–Ω—Ç –º–æ–±–∞–π–ª –Ω–∞ {random.randint(0,200)}%',reply_markup=telebot.types.ReplyKeyboardRemove())

@bot.callback_query_handler(func=lambda call: True)
def answers(callback):
	print("handling callback with data: " + callback.data)
	
	if (callback.message.chat.id in usersAndSteps.keys()):
		emotion = answer_handler.handle_answer(callback.data,usersAndSteps[callback.message.chat.id])

		if emotion.split("|")[0] != "":
			bot.send_message(callback.message.chat.id, emotion.split("|")[0],parse_mode="html")

		# skip question
		if ("|" in emotion):
			usersAndSteps.update({callback.message.chat.id : usersAndSteps[callback.message.chat.id] + (int(emotion.split("|")[1]) + 1)})
		else:
			usersAndSteps.update({callback.message.chat.id : usersAndSteps[callback.message.chat.id] + 1})

		if (usersAndSteps[callback.message.chat.id] != len(questions) - 1):
			replies = telebot.types.InlineKeyboardMarkup(row_width=3)
			for i in questions_container.answers[usersAndSteps[callback.message.chat.id]]:
				replies.add(telebot.types.InlineKeyboardButton(i.lower(), callback_data=i))
		else:
			replies = telebot.types.ReplyKeyboardMarkup(row_width=2)
			btn1 = telebot.types.KeyboardButton('–ø–∞–∫–µ–∂ —Ä–µ–∑—É–ª—å—Ç–∞—Ç')
			replies.add(btn1)

		bot.send_message(callback.message.chat.id,questions[usersAndSteps[callback.message.chat.id]],parse_mode="html",reply_markup=replies)
	else:
		bot.send_message(callback.message.chat.id,"–¢–µ–±—è –Ω–µ—Ç—É –≤ —Å–ø–∏—Å–∫–µ –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –æ–ø—Ä–æ—Å")

# start bot
bot.polling(none_stop=True)